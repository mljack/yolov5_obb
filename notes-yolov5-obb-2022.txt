https://github.com/mljack/yolov5_obb/blob/master/docs/install.md

conda create -n yolov5_obb python=3.9 -y 
source activate yolov5_obb
pip3 install torch==1.10.1+cu113 torchvision==0.11.2+cu113 torchaudio==0.10.1+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html

cd yolov5_obb
pip install -r requirements.txt
cd utils/nms_rotated
pip install -v -e .

cd yolov5_obb/DOTA_devkit
sudo apt-get install swig
swig -c++ -python polyiou.i
python setup.py build_ext --inplace

python convert_to_yolo_poly_dataset.py

python -u train.py --save-period 1 --weight "runs/yolov5m_finetune/weights/best.pt" --data "data/eagle003.yaml" --hyp "data/hyps/obb/hyp.finetune_eagle003.yaml" --img-size 768 --batch-size 32 --epochs 80 --device 0 2>&1 | tee 20221016_0325.log

heading angles sometimes are incorrect...
    due to augmentation?
        or incorrect label converter?
            inverted y...

train: Scanning 'data/eagle/0001_shijidadao_20200907_1202_200m_fixed/train/labelTxt' images and labels...64581 found, 0 missing, 0 empty, 33317 corrupted: 100%|██████████| 64581/64581 [00:02<00:00, 22076.84it/s]
val: Scanning 'data/eagle/0011_private170/labelTxt' images and labels...490 found, 0 missing, 0 empty, 135 corrupted: 100%|██████████| 490/490 [00:00<00:00, 13615.34it/s]
val: WARNING: data/eagle/0011_private170/images/yanggaobeilu_20210327_134654_a_01.jpg: ignoring corrupt image/label: negative label values [     -21.75      -48.03       -3.98], please check your dota format labels

yolov5_obb/utils/datasets.py
    def verify_image_label(args):
                #assert (l >= 0).all(), f'negative label values {l[l < 0]}, please check your dota format labels'
                    comment the negative coodinates checking

exp        train           val                 hyp             epochs       val_mAP     private170_mAP(val.py)
exp4       eagle           private170          DroneVehicle    17/23        84.835%     85.1%
exp5       eagle           private170          DOTA            17/19        85.308%     85.8%
exp6       eagle+longyao   private170          DOTA            13/23        85.701%     86.1%
exp7       eagle+longyao   eagle+longyao       DOTA            99/99        92.760%     86.2%@epoch99 86.3%epoch75 86.4%@epoch50 86.0%@epoch25 85.8%@epoch10
exp8       eagle+longyao   eagle+longyao       DroneVehicle    33/interrupted 88.272%                              86.1%@epoch32 85.8%@epoch25 85.1%@epoch10

measurement of best model
    fitness = 0.1*{mAP@0.5} + 0.9*{mAP@0.5:0.95}

def load_mosaic(self, index):
    # YOLOv5 4-mosaic loader. Loads 1 image + 3 random images into a 4-image mosaic
def load_mosaic9(self, index):
    # YOLOv5 9-mosaic loader. Loads 1 image + 8 random images into a 9-image mosaic
def extract_boxes(path='../datasets/coco128'):  # from utils.datasets import *; extract_boxes()
    # Convert detection dataset into classification dataset, with one directory per class

python val.py --batch-size 32 --imgsz 768 --device=0 --data "data/eagle003.yaml" --weights runs/train/exp7/weights/best.pt
python val.py --batch-size 32 --imgsz 768 --device=0 --data "data/eagle003.yaml" --weights runs/train/exp7/weights/epoch99.pt

evaluate OBB mAP with yolov5_obb/val.py
    python val.py --batch-size 32 --imgsz 768 --device=0 --data "data/eagle003.yaml" --weights runs/train/exp7/weights/epoch50.pt --save-json
    runs/val/exp29/epoch50_obb_predictions.json
    python tools/TestJson2VocClassTxt.py --json_path runs/val/exp29/epoch50_obb_predictions.json --save_path runs/val/exp29/epoch50_obb_det
    rename Task1_plane.txt to Task1_vehicle.txt
    ls data/eagle/0011_private170/labelTxt | sed 's/\.txt//g' > data/eagle/0011_private170/list.txt
    python DOTA_devkit/dota_evaluation_task1.py --detpath 'runs/val/exp29/epoch50_obb_det/Task1_{:s}.txt' --annopath 'data/eagle/0011_private170/labelTxt/{:s}.txt' --imagesetfile data/eagle/0011_private170/list.txt
        no luck yet...
            it's due to DOTA_devkit skip labels with difficult==1, and somehow all my gt label difficult==1
                set all difficult==0 and it works!
    (yolov5_obb) me@node2:~/2TSSD/ws/yolov5_obb$ python DOTA_devkit/dota_evaluation_task1.py --detpath 'runs/val/exp29/epoch50_obb_det/Task1_{:s}.txt' --annopath 'data/eagle/0011_private170/labelTxt/{:s}.txt' --imagesetfile data/eagle/0011_private170/list.txt
    mAP@IoU0.50: 90.91%
    mAP@IoU0.55: 90.91%
    mAP@IoU0.60: 90.91%
    mAP@IoU0.65: 90.91%
    mAP@IoU0.70: 90.91%
    mAP@IoU0.75: 90.90%
    mAP@IoU0.80: 90.84%
    mAP@IoU0.85: 89.24%
    mAP@IoU0.90: 62.31%
    mAP@IoU0.95: 10.71%
    mmAP:79.85%
        low on low IoU ?
        high on high IoU ?
        mAP50 < 99% => recall issue

OBB mAPs: (best efficientdet result@20221020)
+-------------------------------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+
| model + w_scale               |   50%  |   55%  |   60%  |   65%  |   70%  |   75%  |   80%  |   85%  |   90%  |   95%  | 50-95% |
+-------------------------------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+
|model-073-036epoch, w*=0.938   | 99.86% | 99.79% | 99.75% | 99.54% | 99.07% | 98.76% | 97.60% | 90.65% | 56.74% |  2.83% | 84.46% | * +2.56, datasets@2021
+-------------------------------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+
|model-z0009-054epoch, w*=0.923 | 99.79% | 99.67% | 99.48% | 99.33% | 99.11% | 98.60% | 97.62% | 92.05% | 56.74% |  2.72% | 84.51% | ** +6.2, 5 new datasets including VAID_aabb
+-------------------------------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+


todo
    visualize OBB results
        draw or vehicle_markers.json
    implement resize and large image inference
    export to vehicle_markers.json
        then measure mAP
